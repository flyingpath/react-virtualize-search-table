{"version":3,"sources":["components/index.js","App.js","serviceWorker.js","index.js","components/style.module.scss"],"names":["SortableHeader","sortableElement","children","props","React","cloneElement","SortableHeaderRowRenderer","sortableContainer","className","columns","style","role","Children","map","column","index","ReactVirtualizedSearchTable","onSortEnd","oldIndex","newIndex","setState","arrayMove","filterData","newData","state","data","_","forIn","filterDict","value","key","filter","d","searchString","searchKey","String","toLowerCase","indexOf","filterdData","onChangeSearchFilter","e","target","orderData","slice","orderDict","orderBy","orderKey","headerColumnMaker","idx","newProps","Object","assign","title","headerTd","onChange","dataKey","onClick","label","renderHeaderRow","params","paddingRight","height","Fragment","headerRow","headerClassName","axis","lockAxis","distance","rowColumnMaker","rowData","element","rowRenderer","tableRow","rowClassName","defaultTableRowRenderer","prevProps","this","widthAverage","forEach","width","minWidth","length","main","autoSizer","tableTitle","headerHeight","rowHeight","rowCount","rowGetter","headerRowRenderer","table","tableClassName","borderRadius","onRowClick","flexGrow","Component","App","demo","name","description","danger","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"sVAYMA,EAAiBC,aAAgB,gBAAEC,EAAF,EAAEA,SAAaC,EAAf,mCACnCC,IAAMC,aAAaH,EAAUC,MAG3BG,EAA4BC,aAC9B,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAAtB,OACI,yBAAKF,UAAWA,EAAWG,KAAK,MAAMD,MAAOA,GACxCN,IAAMQ,SAASC,IAAIJ,GAAS,SAACK,EAAQC,GAAT,OACzB,kBAACf,EAAD,CAAgBe,MAAOA,GAAQD,UAqRhCE,E,kDA9QX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAwBVc,UAAY,YAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACpB,EAAKC,UAAS,gBAAEX,EAAF,EAAEA,QAAF,MAAgB,CAC1BA,QAASY,IAAUZ,EAASS,EAAUC,QA3B3B,EA+BnBG,WAAa,WACT,IAAIC,EAAU,EAAKC,MAAMC,KAEzBC,IAAEC,MAAO,EAAKC,YAAY,SAAEC,EAAOC,GAC/BP,EAAUG,IAAEK,OAAQR,GAAS,SAAAS,GACzB,IAAMC,EAAeD,EAAGF,GAAMI,UAC9B,MAAe,KAAVL,KAGqB,IAAjBI,IAEwB,IAAjBA,GAGHE,OAAOF,GAAcG,cAAcC,QAAQR,EAAMO,gBAAkB,SASxF,EAAKhB,SAAU,CACXkB,YAAaf,KAvDF,EA2DnBgB,qBAAuB,SAAET,GAErB,OAAO,SAACU,GAEJ,IAAMX,EAAQW,EAAEC,OAAOZ,MACvB,EAAKD,WAAYE,GAAQD,EACzB,EAAKP,eAjEM,EAqEnBoB,UAAY,SAACZ,GACT,OAAO,WACH,IAAIP,EAAU,EAAKC,MAAMc,YAAYK,QAE/B,EAAKC,UAAWd,IAGY,SAA1B,EAAKc,UAAWd,GAChB,EAAKc,UAAWd,GAAQ,MAH5B,EAAKc,UAAWd,GAAQ,OAS5BP,EAAUG,IAAEmB,QAAStB,EAAS,CAAE,SAACS,GAAD,OAAOA,EAAGF,GAAMgB,WAAa,CAAE,EAAKF,UAAWd,KAE/E,EAAKV,SAAU,CACXkB,YAAaf,MAtFN,EA4FnBwB,kBAAoB,SAAC5C,GACjB,OACIA,EAAMM,QAAQI,KAAK,SAACmB,EAAGgB,GACnB,IAAMlC,EAAS,EAAKU,MAAMf,QAASuC,GAE/BC,EAAWC,OAAOC,OAAQ,GAAInB,EAAE7B,OAOpC,OALA8C,EAASzC,UAAY,uBAEdyC,EAASG,aACTH,EAAS/C,SAGZ,yCAAU+C,EAAV,CAAqBnB,IAAOkB,EAAKxC,UAAcE,IAAM2C,SAAW,eAC5D,yBAAK7C,UAAY,gBACb,2BAAO8C,SAAa,EAAKf,qBAAsBzB,EAAOyC,YAE1D,yBAAK/C,UAAU,QAAQgD,QAAY,EAAKd,UAAW5B,EAAOyC,UACpDzC,EAAO2C,YA9Gd,EAsHnBC,gBAAkB,SAACC,GAEf,IAAMlD,EAAU,EAAKsC,kBAAmBY,GAOxC,OALAA,EAAOlD,QAAUA,SACVkD,EAAOjD,MAAMkD,oBACbD,EAAOjD,MAAMmD,cACbF,EAAOnD,UAGV,kBAAC,IAAMsD,SAAP,KACI,kBAACxD,EAAD,iBACQqD,EADR,CAEInD,UAAaE,IAAMqD,WAAa,EAAK5D,MAAM6D,gBAAkB,IAAM,EAAK7D,MAAM6D,gBAAkB,IAChGC,KAAY,IACZC,SAAY,IACZjD,UAAa,EAAKA,UAClBkD,SAAa,OAvIV,EA8InBC,eAAiB,SAACjE,GACd,IAAMsB,EAAQtB,EAAMkE,QACpB,OACIlE,EAAMM,QAAQI,KAAK,SAACmB,EAAGgB,GACnB,IAAMlC,EAAS,EAAKU,MAAMf,QAASuC,GAE/BC,EAAWC,OAAOC,OAAQ,GAAInB,EAAE7B,OAKpC,cAHO8C,EAASG,aACTH,EAAS/C,SAGZ,yCAAU+C,EAAV,CAAqBnB,IAAOkB,IACtBvB,EAAMX,EAAOyC,SAAUe,aA3J1B,EAkKnBC,YAAc,SAACpE,GACX,IAAMM,EAAU,EAAK2D,eAAgBjE,GAQrC,OAPAA,EAAMM,QAAUA,EAChBN,EAAMK,WAAc,IAAME,IAAM8D,SAE7B,EAAKrE,MAAMsE,eACVtE,EAAMK,WAAc,IAAM,EAAKL,MAAMsE,cAGlCC,YAAwBvE,IAzK/B,EAAKqB,MAAQ,CACTf,QAAS,EAAKN,MAAMM,QACpBgB,KAAS,EAAKtB,MAAMsB,KACpBa,YAAa,EAAKnC,MAAMsB,MAG5B,EAAKG,WAAa,GAClB,EAAKgB,UAAa,GATH,E,+DAaA+B,GACVA,EAAUlD,OAASmD,KAAKzE,MAAMsB,MAAQkD,EAAUlE,UAAYmE,KAAKzE,MAAMM,SACnEmE,KAAKzE,MAAMsB,OAASmD,KAAKpD,MAAMC,MAAQmD,KAAKzE,MAAMM,UAAYmE,KAAKpD,MAAMf,SAC1EmE,KAAKxD,SAAS,CACVX,QAASmE,KAAKzE,MAAMM,QACpBgB,KAAMmD,KAAKzE,MAAMsB,KACjBa,YAAasC,KAAKzE,MAAMsB,S,+BA2J9B,IAAD,OAECa,EAAcsC,KAAKpD,MAAMc,YAEzB7B,EAAUmE,KAAKpD,MAAMf,QAEvBoE,GAAe,EACnBpE,EAAQqE,SAAS,SAAA9C,GACRA,EAAE+C,QACHF,GAAe,MAIvB,IAAMG,EAA4B,GAAjBvE,EAAQwE,OAEzB,OACI,yBAAKzE,UAAcE,IAAMwE,KAAOxE,MAAS,CAAEsE,SAAUA,IACjD,kBAAC,IAAD,CAAWxE,UAAcE,IAAMyE,UAAYzE,MAAQ,CAAEmD,OAAQ,OAAQkB,MAAO,UAC3E,YAAwB,IAArBlB,EAAoB,EAApBA,OAAQkB,EAAY,EAAZA,MACR,OACI,kBAAC,IAAMjB,SAAP,KACM,EAAK3D,MAAMiD,OACT,yBAAK5C,UAA0C,kBAArB,EAAKL,MAAMiD,MAAoB,GAAK1C,IAAM0E,YAC/D,EAAKjF,MAAMiD,OAGpB,kBAAC,IAAD,CACI2B,MAAgBA,EAAQ,EACxBlB,OAAgBA,EAAS,IACzBwB,aAAgB,GAChBC,UAAgB,EAAKnF,MAAMmF,WAAa,GACxCC,SAAgBjD,EAAY2C,OAC5BV,YAAgB,EAAKA,YACrBiB,UAAgB,gBAAGzE,EAAH,EAAGA,MAAH,OAAeuB,EAAYvB,IAC3C0E,kBAAsB,EAAK/B,gBAC3BlD,UAAgBE,IAAMgF,OAAU,EAAKvF,MAAMwF,eAAX,WAA+B,EAAKxF,MAAMwF,gBAAkB,IAC5FjF,MAAe,CACXkF,aAAc,OAElBC,WAAgB,EAAK1F,MAAM0F,YAEvBpF,EAAQI,KAAK,SAACmB,EAAGgB,GAAJ,OACb,kBAAC,IAAD,iBACShB,EADT,CAEIF,IAAakB,EACb8C,SAAY,EACZf,MAAaF,EAAc,IAAO7C,EAAE+C,sB,GA7NlC3E,IAAM2F,WCsLjCC,G,yDAzMX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACDqB,MAAQ,CACTf,QAAS,GACTgB,KAAM,IAJK,E,qDAUf,IAAMwE,EAAW,CACb7C,MAAO,uCACP3C,QAAU,CACN,CAAE8C,QAAS,OAAewB,MAAO,IAAKtB,MAAO,QAC7C,CAAEF,QAAS,cAAewB,MAAO,IAAKtB,MAAO,eAC7C,CAAEF,QAAS,SAAewB,MAAO,IAAKtB,MAAO,iEAEjDhC,KAAM,CACF,CACIyE,KAAQ,CACJ5B,QAAgB,yCAChBpC,UAAc,WACdY,SAAc,YAElBqD,YAAa,CACT7B,QAAgB,qCAChBpC,UAAc,QACdY,SAAc,qBAElBsD,OAAQ,CACJ9B,QAAgB,kCAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,sCAChBpC,UAAc,OACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,qCAChBpC,UAAc,OACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8CAChBpC,UAAc,eACdY,SAAc,gBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,4CAChBpC,UAAc,cACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,MACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8BAChBpC,UAAc,gBACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8BAChBpC,UAAc,gBACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8BAChBpC,UAAc,gBACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8BAChBpC,UAAc,gBACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8BAChBpC,UAAc,gBACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,IAGtB,CACIoD,KAAQ,CACJ5B,QAAgB,8BAChBpC,UAAc,gBACdY,SAAc,iBAElBqD,YAAa,CACT7B,QAAgB,sCAChBpC,UAAc,qBACdY,SAAc,sBAElBsD,OAAQ,CACJ9B,QAAgB,8BAChBpC,WAAc,EACdY,SAAc,MAO9B,OACI,yBAAKpC,MAAO,CAAEmD,OAAQ,SAClB,kBAAC,EAAD,iBAA+BoC,EAA/B,CAAqCN,eAAe,e,GAnMlDvF,IAAM2F,YCMJM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBElInBC,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,WAAa,0BAA0B,UAAY,yBAAyB,SAAW,wBAAwB,SAAW,0B","file":"static/js/main.0508fad9.chunk.js","sourcesContent":["import React from 'react' \nimport _ from 'lodash' \nimport PropTypes from 'prop-types'\n\nimport arrayMove from 'array-move'\nimport { AutoSizer } from 'react-virtualized'\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc'\nimport { defaultTableRowRenderer, Table, Column } from 'react-virtualized'\n\nimport 'react-virtualized/styles.css'\nimport style from './style.module.scss'\n\nconst SortableHeader = sortableElement(({children, ...props}) =>\n    React.cloneElement(children, props)\n)\n\nconst SortableHeaderRowRenderer = sortableContainer(\n    ({className, columns, style}) => (\n        <div className={className} role=\"row\" style={style} >\n            {React.Children.map(columns, (column, index) => (\n                <SortableHeader index={index}>{column}</SortableHeader>\n            ))}\n        </div>\n    )\n)\n\nclass ReactVirtualizedSearchTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            columns: this.props.columns,\n            data   : this.props.data,\n            filterdData: this.props.data\n        }\n\n        this.filterDict = {} // 目前搜尋狀態\n        this.orderDict  = {}  // 目前排序狀態\n    }\n\n\n    componentDidUpdate(prevProps) {\n        if ( prevProps.data !== this.props.data || prevProps.columns !== this.props.columns ) {\n            if ( this.props.data !== this.state.data || this.props.columns !== this.state.columns ) {\n                this.setState({\n                    columns: this.props.columns,\n                    data: this.props.data,\n                    filterdData: this.props.data\n                })\n            }\n        }\n    }\n\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState(({columns}) => ({\n            columns: arrayMove(columns, oldIndex, newIndex)\n        }))\n    }\n\n    filterData = () => {\n        let newData = this.state.data\n\n        _.forIn( this.filterDict, ( value, key ) => {\n            newData = _.filter( newData, d => {\n                const searchString = d[ key ].searchKey\n                if ( value === '' ){\n                    return true\n                } else {\n                    if ( searchString === true ) {\n                        return true\n                    } else if ( searchString === false ) {\n                        return false\n                    } else {\n                        if ( String(searchString).toLowerCase().indexOf(value.toLowerCase()) > -1 ){\n                            return true\n                        } else {\n                            return false\n                        }\n                    }\n                }\n            } )\n        } )\n        this.setState( { \n            filterdData: newData\n        } )\n    }\n\n    onChangeSearchFilter = ( key ) => {\n\n        return (e) => {\n            \n            const value = e.target.value \n            this.filterDict[ key ] = value\n            this.filterData()\n        }\n    }\n\n    orderData = (key) => {\n        return ()=>{\n            let newData = this.state.filterdData.slice()\n\n            if ( !this.orderDict[ key ] ) {\n                this.orderDict[ key ] = 'desc'\n            } else {\n                if( this.orderDict[ key ] === 'desc' ) {\n                    this.orderDict[ key ] = 'asc'\n                } else {\n                    this.orderDict[ key ] = 'desc'\n                }\n            }\n    \n            newData = _.orderBy( newData, [ (d)=> (d[ key ].orderKey) ], [ this.orderDict[ key ] ] )\n\n            this.setState( { \n                filterdData: newData\n            } )\n        }\n    }\n\n    // 加工 header 以增加搜尋功能\n    headerColumnMaker = (props) => {\n        return (\n            props.columns.map( (d, idx) => {\n                const column = this.state.columns[ idx ]\n\n                let newProps = Object.assign( {}, d.props )\n\n                newProps.className = 'header-column'\n\n                delete newProps.title\n                delete newProps.children\n\n                return ( \n                    <div { ...newProps } key = {idx} className = { style.headerTd + ' header-td'}>\n                        <div className = 'input-parent' >\n                            <input onChange = { this.onChangeSearchFilter( column.dataKey ) } />\n                        </div>\n                        <div className='label' onClick = { this.orderData( column.dataKey ) } >\n                            { column.label }\n                        </div>\n                    </div> \n                )\n            } )\n        )\n    }\n\n    renderHeaderRow = (params) => {\n\n        const columns = this.headerColumnMaker( params )\n\n        params.columns = columns\n        delete params.style.paddingRight\n        delete params.style.height\n        delete params.className\n\n        return (\n            <React.Fragment >\n                <SortableHeaderRowRenderer\n                    {...params}\n                    className = {style.headerRow + (this.props.headerClassName? (' ' + this.props.headerClassName): '' )  }\n                    axis      = \"x\"\n                    lockAxis  = \"x\"\n                    onSortEnd = {this.onSortEnd}\n                    distance  = {1} \n                />\n            </React.Fragment>\n        )\n    }\n  \n\n    rowColumnMaker = (props) => {\n        const data  = props.rowData\n        return (\n            props.columns.map( (d, idx) => {\n                const column = this.state.columns[ idx ]\n\n                let newProps = Object.assign( {}, d.props )\n\n                delete newProps.title\n                delete newProps.children\n\n                return ( \n                    <div { ...newProps } key = {idx} >\n                        { data[ column.dataKey ].element }\n                    </div> \n                )\n            } )\n        )\n    }\n\n    rowRenderer = (props) => {\n        const columns = this.rowColumnMaker( props )\n        props.columns = columns\n        props.className += (' ' + style.tableRow)\n\n        if(this.props.rowClassName){\n            props.className += (' ' + this.props.rowClassName)\n        }\n\n        return defaultTableRowRenderer(props)\n    }\n\n    render() {\n\n        const filterdData = this.state.filterdData\n\n        const columns = this.state.columns\n\n        let widthAverage = false\n        columns.forEach( d => {\n            if (!d.width) {\n                widthAverage = true\n            }\n        } )\n\n        const minWidth = columns.length * 80\n\n        return (\n            <div className = { style.main } style = {{ minWidth: minWidth }} >\n                <AutoSizer className = { style.autoSizer } style={ { height: '100%', width: '100%' } } >\n                {({ height, width }) => {\n                    return (\n                        <React.Fragment>\n                            { this.props.title &&\n                                <div className = { typeof this.props.title === 'object'? '' : style.tableTitle }  >\n                                    {this.props.title}\n                                </div>\n                            } \n                            <Table\n                                width       = { width - 2 }\n                                height      = { height - 100 }\n                                headerHeight= { 70 }\n                                rowHeight   = { this.props.rowHeight || 60 }\n                                rowCount    = { filterdData.length }\n                                rowRenderer = { this.rowRenderer }\n                                rowGetter   = { ({ index }) => filterdData[index] }\n                                headerRowRenderer = { this.renderHeaderRow }\n                                className   = { style.table + ( this.props.tableClassName? ` ${this.props.tableClassName}`: '' ) }\n                                style       = {{\n                                    borderRadius: '5px'\n                                }}\n                                onRowClick  = { this.props.onRowClick }\n                            > \n                                {   columns.map( (d, idx) => (\n                                    <Column\n                                        { ...d } \n                                        key      = { idx } \n                                        flexGrow = {1}\n                                        width    = { widthAverage? 100 : (d.width) }\n                                    />\n                                ) )}\n                            </Table>\n                        </React.Fragment>\n                    )\n                }}\n                </AutoSizer>\n            </div>\n        )\n    }\n}\n\nReactVirtualizedSearchTable.propTypes = {\n    title: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    columns: PropTypes.arrayOf(\n        PropTypes.shape({\n            dataKey: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired\n        })\n    ).isRequired,\n    data: PropTypes.arrayOf(\n        PropTypes.objectOf(\n            PropTypes.shape({\n                element: PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.element,\n                ]).isRequired,\n                searchKey: PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.bool\n                ]).isRequired,\n                orderKey: PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.number,\n                    PropTypes.bool\n                ]).isRequired,\n            })\n        )\n    ).isRequired,\n    rowHeight: PropTypes.number,\n    onRowClick: PropTypes.func,\n    rowClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    tableClassName: PropTypes.string,\n}\n\nexport default ReactVirtualizedSearchTable  ","import React from 'react'\n\nimport ReactVirtulizeSearchTable from './components/index'\n\nimport './App.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            columns: [],\n            data: []\n        }\n    }\n\n    render() {\n\n        const demo =     {\n            title: '門診紀錄列表',\n            columns:  [\n                { dataKey: 'name',        width: 100, label: 'name' },\n                { dataKey: 'description', width: 100, label: 'description' },\n                { dataKey: 'danger',      width: 200, label: '危機值危機值危機值危' },\n            ],\n            data: [\n                { \n                    name  : {\n                        element     : ( <div>20190423</div> ),\n                        searchKey   : '20190423',\n                        orderKey    : '20190423'\n                    }, \n                    description: {\n                        element     : ( <div>1234</div> ),\n                        searchKey   : '12343',\n                        orderKey    : 'Software engineer'\n                    },\n                    danger: {\n                        element     : ( <div>o</div> ),\n                        searchKey   : true,\n                        orderKey    : 1\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div>12343</div> ),\n                        searchKey   : '1234',\n                        orderKey    : 'Brian Vaughn2'\n                    }, \n                    description: {\n                        element     : ( <div>1234</div> ),\n                        searchKey   : '1234',\n                        orderKey    : 'Software engineer2'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div>Brian Vaughn3</div> ),\n                        searchKey   : 'Brian Vaughn',\n                        orderKey    : 'Brian Vaughn'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div>Describe555</div> ),\n                        searchKey   : 'Describe555',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : '555',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div></div> ),\n                        searchKey   : 'Brian Vaughn3',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div></div> ),\n                        searchKey   : 'Brian Vaughn3',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div></div> ),\n                        searchKey   : 'Brian Vaughn3',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div></div> ),\n                        searchKey   : 'Brian Vaughn3',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div></div> ),\n                        searchKey   : 'Brian Vaughn3',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                },\n                { \n                    name  : {\n                        element     : ( <div></div> ),\n                        searchKey   : 'Brian Vaughn3',\n                        orderKey    : 'Brian Vaughn3'\n                    }, \n                    description: {\n                        element     : ( <div>xxxxx</div> ),\n                        searchKey   : 'Software engineer3',\n                        orderKey    : 'Software engineer3'\n                    },\n                    danger: {\n                        element     : ( <div></div> ),\n                        searchKey   : false,\n                        orderKey    : 0\n                    }\n                }\n            ]\n        }\n\n\n        return (\n            <div style={{ height: '100%' }}>\n                <ReactVirtulizeSearchTable {...demo} tableClassName='test' />\n            </div>\n        )\n    }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__1FC5l\",\"table\":\"style_table__3P1SL\",\"tableTitle\":\"style_tableTitle__3lUIh\",\"headerRow\":\"style_headerRow__3oiLB\",\"headerTd\":\"style_headerTd__2h1it\",\"tableRow\":\"style_tableRow__1NH9Z\"};"],"sourceRoot":""}